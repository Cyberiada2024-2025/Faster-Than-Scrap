[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://dn3wxypekbr1v"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ywnnn"]
parameter_name = "Color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_ywnnn"]
function = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_21s0v"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ildoj"]
parameter_name = "EmmisionStrength"
default_value_enabled = true
default_value = 10.0

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_ywnnn"]
output_port_for_preview = 0
default_input_values = [2, false, 3, 2.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ywnnn"]
parameter_name = "FresnelPower"
default_value_enabled = true
default_value = 3.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_gtxp8"]
parameter_name = "FresnelRing"
hint = 1
default_value_enabled = true
default_value = 0.5

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 Color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform float FresnelPower = 3.0;
uniform float FresnelRing : hint_range(0.0, 1.0) = 0.5;
uniform float EmmisionStrength = 10.0;



void fragment() {
// ColorParameter:10
	vec4 n_out10p0 = Color;


// FloatParameter:3
	float n_out3p0 = FresnelPower;


// Fresnel:2
	float n_out2p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_out3p0);


// FloatParameter:5
	float n_out5p0 = FresnelRing;


// Compare:13
	bool n_out13p0 = n_out2p0 > n_out5p0;


// FloatParameter:16
	float n_out16p0 = EmmisionStrength;


// VectorOp:15
	vec3 n_out15p0 = vec3(n_out10p0.xyz) * vec3(n_out16p0);


// Output:0
	ALBEDO = vec3(n_out10p0.xyz);
	ALPHA = (n_out13p0 ? 1.0 : 0.0);
	EMISSION = n_out15p0;


}
"
nodes/fragment/2/node = SubResource("VisualShaderNodeFresnel_ywnnn")
nodes/fragment/2/position = Vector2(-720, -200)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatParameter_ywnnn")
nodes/fragment/3/position = Vector2(-1000, -140)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_gtxp8")
nodes/fragment/5/position = Vector2(-720, 220)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorParameter_ywnnn")
nodes/fragment/10/position = Vector2(-240, 220)
nodes/fragment/13/node = SubResource("VisualShaderNodeCompare_ywnnn")
nodes/fragment/13/position = Vector2(-360, -40)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorOp_21s0v")
nodes/fragment/15/position = Vector2(80, 400)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatParameter_ildoj")
nodes/fragment/16/position = Vector2(-320, 540)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 3, 2, 0, 13, 0, 5, 0, 13, 1, 13, 0, 0, 1, 10, 0, 0, 0, 15, 0, 0, 5, 16, 0, 15, 1, 10, 0, 15, 0)
